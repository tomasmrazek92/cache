{
  "version": 3,
  "sources": ["../bin/live-reload.js", "../src/nav.js"],
  "sourcesContent": ["new EventSource(`${SERVE_ORIGIN}/esbuild`).addEventListener('change', () => location.reload());\n", "// Nav Reveal\nlet nav = $('.nav_wrapper');\nfunction checkNav() {\n  var scroll = $(window).scrollTop();\n  let nav = $('.nav_wrapper');\n\n  if (typeof nav.attr('fixed-by-default') === 'undefined') {\n    if (scroll >= 250) {\n      nav.addClass('sticky');\n      setTimeout(() => {\n        $('.nav_wrapper').css('top', 0);\n      });\n    } else if (scroll === 0) {\n      nav.removeClass('sticky');\n      nav.attr('style', '');\n    }\n  }\n}\n\n$(window).scroll(checkNav);\ncheckNav();\n\n// Force to White\n// Debounce function to delay execution of specific actions\nfunction debounce(func, wait) {\n  let timeout;\n  return function (...args) {\n    const later = () => {\n      clearTimeout(timeout);\n      func(...args);\n    };\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n  };\n}\n\n// Function to handle the case when no dropdowns have the \"w--open\" class\nconst handleNoOpenDropdowns = debounce(() => {\n  nav.removeClass('is-open');\n}, 10);\n\n// Function to check the presence of the \"w--open\" class among dropdowns\nfunction checkForOpenClass() {\n  const hasOpenClass = Array.from(document.querySelectorAll('.nav__drop-toggle')).some((element) =>\n    element.classList.contains('w--open')\n  );\n  if (hasOpenClass) {\n    nav.addClass('is-open');\n    // Immediate actions when a dropdown is open\n  } else {\n    // Delayed check for no open dropdowns\n    handleNoOpenDropdowns();\n  }\n}\n\n// MutationObserver to observe class changes on dropdowns\nconst observer = new MutationObserver((mutations) => {\n  checkForOpenClass();\n});\n\n// Observe all elements with the class \"nav__drop-toggle\"\nconst targetElements = document.querySelectorAll('.nav__drop-toggle');\n\ntargetElements.forEach((targetElement) => {\n  observer.observe(targetElement, {\n    attributes: true,\n    attributeFilter: ['class'],\n  });\n});\n"],
  "mappings": ";;;AAAA,MAAI,YAAY,GAAG,iCAAsB,EAAE,iBAAiB,UAAU,MAAM,SAAS,OAAO,CAAC;;;ACC7F,MAAI,MAAM,EAAE,cAAc;AAC1B,WAAS,WAAW;AAClB,QAAI,SAAS,EAAE,MAAM,EAAE,UAAU;AACjC,QAAIA,OAAM,EAAE,cAAc;AAE1B,QAAI,OAAOA,KAAI,KAAK,kBAAkB,MAAM,aAAa;AACvD,UAAI,UAAU,KAAK;AACjB,QAAAA,KAAI,SAAS,QAAQ;AACrB,mBAAW,MAAM;AACf,YAAE,cAAc,EAAE,IAAI,OAAO,CAAC;AAAA,QAChC,CAAC;AAAA,MACH,WAAW,WAAW,GAAG;AACvB,QAAAA,KAAI,YAAY,QAAQ;AACxB,QAAAA,KAAI,KAAK,SAAS,EAAE;AAAA,MACtB;AAAA,IACF;AAAA,EACF;AAEA,IAAE,MAAM,EAAE,OAAO,QAAQ;AACzB,WAAS;AAIT,WAAS,SAAS,MAAM,MAAM;AAC5B,QAAI;AACJ,WAAO,YAAa,MAAM;AACxB,YAAM,QAAQ,MAAM;AAClB,qBAAa,OAAO;AACpB,aAAK,GAAG,IAAI;AAAA,MACd;AACA,mBAAa,OAAO;AACpB,gBAAU,WAAW,OAAO,IAAI;AAAA,IAClC;AAAA,EACF;AAGA,MAAM,wBAAwB,SAAS,MAAM;AAC3C,QAAI,YAAY,SAAS;AAAA,EAC3B,GAAG,EAAE;AAGL,WAAS,oBAAoB;AAC3B,UAAM,eAAe,MAAM,KAAK,SAAS,iBAAiB,mBAAmB,CAAC,EAAE;AAAA,MAAK,CAAC,YACpF,QAAQ,UAAU,SAAS,SAAS;AAAA,IACtC;AACA,QAAI,cAAc;AAChB,UAAI,SAAS,SAAS;AAAA,IAExB,OAAO;AAEL,4BAAsB;AAAA,IACxB;AAAA,EACF;AAGA,MAAM,WAAW,IAAI,iBAAiB,CAAC,cAAc;AACnD,sBAAkB;AAAA,EACpB,CAAC;AAGD,MAAM,iBAAiB,SAAS,iBAAiB,mBAAmB;AAEpE,iBAAe,QAAQ,CAAC,kBAAkB;AACxC,aAAS,QAAQ,eAAe;AAAA,MAC9B,YAAY;AAAA,MACZ,iBAAiB,CAAC,OAAO;AAAA,IAC3B,CAAC;AAAA,EACH,CAAC;",
  "names": ["nav"]
}
