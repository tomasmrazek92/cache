{
  "version": 3,
  "sources": ["../bin/live-reload.js", "../src/faq.js"],
  "sourcesContent": ["new EventSource(`${SERVE_ORIGIN}/esbuild`).addEventListener('change', () => location.reload());\n", "// Slides\nlet menuOpen;\nconst categoryMap = {};\nconst currentSlideEl = $('.current-slide');\nlet currentSlide;\nconst totalSlideEl = $('.total-slide');\nlet totalSlide;\nlet lastActiveCategory = null;\n\n// Links\nconst sideList = $('.questions_toc_list');\nconst sideItems = $('.questions_toc-item');\nconst categoryItems = $('.questions_toc-dropdown');\n\n// Content\nconst content = $('.questions_block');\nconst swiper = new Swiper('.questions_inner-slider', {\n  slidesPerView: 'auto',\n  spaceBetween: 0,\n  navigation: {\n    nextEl: '.swiper-arrow.faq.next',\n    prevEl: '.swiper-arrow.faq.prev',\n  },\n  on: {\n    beforeInit: (swiper) => {\n      mapSlides();\n    },\n    afterInit: (swiper) => {\n      trackSlides(swiper);\n      updateCategory();\n      updateToc(0, swiper);\n    },\n    slideChange: (swiper) => {\n      trackSlides(swiper);\n      updateToc(swiper.activeIndex);\n    },\n  },\n});\n\n// Functions\nfunction mapSlides() {\n  // Iterate over each '.question_list-item'\n  $('.questions_inner').each(function () {\n    const category = $(this).data('category');\n\n    // Initialize the category array if it doesn't exist\n    if (!categoryMap[category]) {\n      categoryMap[category] = [];\n    }\n\n    // Add the '.questions_inner' items of this category to the array\n    $(this).each(function () {\n      categoryMap[category].push(this); // 'this' refers to the '.questions_inner' item\n    });\n  });\n\n  // Get all category keys and sort them (if they are numeric or string)\n  const categoryKeys = Object.keys(categoryMap).sort();\n\n  // Iterate over each category except the last one\n  for (let i = 0; i < categoryKeys.length - 1; i++) {\n    const category = categoryKeys[i];\n    const lastItem = categoryMap[category][categoryMap[category].length - 1];\n\n    // Add class to the last item of this category\n    $(lastItem).addClass('category-last');\n  }\n}\nfunction trackSlides(swiper) {\n  const activeSlide = $(swiper.slides[swiper.activeIndex]);\n\n  // Iterate through each category to find the active slide\n  Object.keys(categoryMap).forEach((category, index) => {\n    // Get total slides for each category\n    $('[category-count]')\n      .eq(index)\n      .text(`(${$(categoryMap[index + 1]).length})`);\n\n    // Find the index of the active slide in the current category\n    const indexInCategory = categoryMap[category].indexOf(activeSlide[0]) || 0;\n\n    if (indexInCategory !== -1) {\n      // Adjust the index for the updateCategory function\n      // Assuming category is a string representing a number\n      updateCategory(parseInt(category) - 1);\n\n      // Check and update the current slide count based on the category\n      if (lastActiveCategory !== category) {\n        currentSlide = indexInCategory + 1; // Reset and update currentSlide\n        lastActiveCategory = category;\n      } else {\n        currentSlide = indexInCategory + 1; // Just update currentSlide\n      }\n\n      totalSlide = categoryMap[category].length;\n\n      // Format currentSlide and totalSlide as two-digit numbers\n      const formattedCurrentSlide = String(currentSlide).padStart(2, '0');\n      const formattedTotalSlide = String(totalSlide).padStart(2, '0');\n      currentSlideEl.text(formattedCurrentSlide);\n      totalSlideEl.text(formattedTotalSlide);\n    }\n  });\n}\nfunction updateCategory(index) {\n  const activeClass = 'active';\n  const activeLine = $('.questions_active-line');\n\n  // Check if the current active index does not match the passed index\n  // Remove the active class from all items and update\n  categoryItems.removeClass(activeClass);\n  categoryItems.eq(index).addClass(activeClass);\n\n  // Find the newly active item and move the line there\n  const newActiveItem = categoryItems.eq(index ?? 0);\n\n  // Update the sidelinks\n  sideList.hide();\n  sideList.eq(index).show();\n\n  // Update the responsive name\n  $('[category-display]').text(newActiveItem.find('[category-name]').text());\n}\nfunction updateToc(index, swiperInstance) {\n  const parentIndex = sideItems.eq(index).closest('ul').index();\n  const activeClass = 'active';\n\n  // Existing code to map slide references\n  const categoryIndex = findInnerIndex(categoryMap, index);\n  let dropdownLists = categoryItems.find('.questions_toc-mask');\n  dropdownLists.stop().animate('height', 0);\n  dropdownLists.eq(categoryIndex).stop().animate('height', 'auto');\n  console.log(parentIndex);\n  console.log(categoryIndex);\n  const slideRef = categoryMap[parentIndex + 1][categoryIndex];\n  const slideIndex = slideRef ? $(slideRef).index() : 0;\n\n  if (swiperInstance) {\n    swiperInstance.slideTo(slideIndex);\n  }\n\n  // Existing code to update active state\n  sideItems.removeClass(activeClass);\n  sideItems.eq(index).addClass(activeClass);\n\n  // Animate scroll\n  const itemOffsetTop = sideItems.eq(index).position().top;\n  const tocWrapper = sideItems.eq(index).closest('.questions_toc_wrap');\n\n  tocWrapper.stop().animate(\n    {\n      scrollTop: tocWrapper.scrollTop() + itemOffsetTop,\n    },\n    500\n  ); // 500 is the duration in milliseconds for the animation\n}\nfunction findInnerIndex(obj, targetIndex) {\n  let cumulativeIndex = 0;\n\n  for (const array of Object.values(obj)) {\n    if (cumulativeIndex + array.length > targetIndex) {\n      // Calculate and return the index within the nested array\n      return targetIndex - cumulativeIndex;\n    }\n    cumulativeIndex += array.length;\n  }\n\n  return -1; // Return -1 if targetIndex is out of bounds\n}\n\n// Links\nsideItems.on('click', function () {\n  updateToc(sideItems.index($(this)), swiper);\n});\n\ncategoryItems.on('click', function () {\n  // Base\n  const index = $(this).index();\n  updateCategory(index);\n\n  const slideRef = categoryMap[index + 1][0];\n  const slideIndex = $(slideRef).index();\n\n  swiper.slideTo(slideIndex);\n\n  if ($(window).width() <= 992) {\n    content.css('display', 'flex');\n    setTimeout(() => {\n      trackSlides(swiper);\n    }, 200);\n    console.log('disabled');\n    disableScroll();\n  }\n});\n\n// Close\n$('#content-close').on('click', function () {\n  content.hide();\n  disableScroll();\n});\n\nvar scrollPosition;\nconst disableScroll = () => {\n  if (!menuOpen) {\n    scrollPosition = $(window).scrollTop();\n    $('html, body').scrollTop(0).addClass('overflow-hidden');\n  } else {\n    $('html, body').scrollTop(scrollPosition).removeClass('overflow-hidden');\n  }\n  menuOpen = !menuOpen;\n};\n"],
  "mappings": "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",
  "names": ["swiper"]
}
